{"Frecl/Components/Alert/Alert.jsx":{"description":"","methods":[]},"Frecl/Components/Alert/AlertItem.jsx":{"description":"","methods":[]},"Frecl/Components/CheckBox/CheckBox.jsx":{"description":"Creates a Checkbox connected to FrECL forms state management all HTML5 attributes apply","methods":[]},"Frecl/Components/Col/Col.jsx":{"description":"Generates a a responsive column requires Row as a parent","methods":[],"props":{"cols":{"type":{"name":"string"},"required":true,"description":"Accepts a space separated string with at most three arguments eg: mobile-12 tablet-8 desktop-9 specifies the\nsize of columns on devices with different screen sizes"},"offset":{"type":{"name":"string"},"required":false,"description":"Works exactly like the cols prop but controls the cols offset"},"pull":{"type":{"name":"string"},"required":false,"description":"Works exactly like the cols prop but controls the cols pull"},"push":{"type":{"name":"string"},"required":false,"description":"Works exactly like the cols prop but controls the cols push"},"className":{"type":{"name":"string"},"required":false,"description":""},"children":{"type":{"name":"node"},"required":true,"description":"The elements/components that should be displayed"}}},"Frecl/Components/CrudHelpers/CrudHelperWrapper.jsx":{"description":"A higher order component to be used internally primarily used to fetch data and pass it down to children","methods":[],"props":{"stateName":{"type":{"name":"string"},"required":true,"description":"Capitalised: The key that the data will be added to state under,\nshould match the string provided to createCrudReducer"},"apiType":{"type":{"name":"string"},"required":true,"description":"The group of api calls the wrapper interacts with"},"apiVerb":{"type":{"name":"string"},"required":false,"description":"Api verb to fetch the data from, the default: 'Query'"},"params":{"type":{"name":"object"},"required":false,"description":"Params to be passed to the api request passed in the body of the request"},"pathArgs":{"type":{"name":"instanceOf","value":"Map"},"required":false,"description":"Path arguments to be passed to the api request injected into the path"},"data":{"type":{"name":"any"},"required":false,"description":"Passed down by mapStateToProps contains the data from the request"},"children":{"type":{"name":"element"},"required":false,"description":"Crud helper to wrap"}}},"Frecl/Components/CrudHelpers/ItemHelper.jsx":{"description":"","methods":[],"props":{"stateName":{"type":{"name":"string"},"required":true,"description":""},"apiType":{"type":{"name":"string"},"required":true,"description":""},"params":{"type":{"name":"object"},"required":false,"description":""},"apiVerb":{"type":{"name":"string"},"required":false,"description":""},"pathArgs":{"type":{"name":"instanceOf","value":"Map"},"required":false,"description":""}}},"Frecl/Components/CrudHelpers/ListHelper.jsx":{"description":"","methods":[]},"Frecl/Components/DatePicker/DatePicker.jsx":{"description":"","methods":[],"props":{"dateFormat":{"defaultValue":{"value":"'DD/MM/YYYY'","computed":false}},"defaultValue":{"defaultValue":{"value":"moment().format('YYYY-MM-DD')","computed":true}}}},"Frecl/Components/DatePicker/DateRange.jsx":{"description":"","methods":[]},"Frecl/Components/DatePicker/DateWrapper.jsx":{"description":"","methods":[{"name":"handleFocus","docblock":null,"modifiers":[],"params":[{"name":"e","type":null}],"returns":null},{"name":"handleClickOutside","docblock":null,"modifiers":[],"params":[],"returns":null},{"name":"closeInput","docblock":null,"modifiers":[],"params":[],"returns":null}]},"Frecl/Components/DatePicker/doc/recipe/entry.js":{"description":"","methods":[]},"Frecl/Components/DropZone/DropZone.jsx":{"description":"","methods":[{"name":"getFiles","docblock":null,"modifiers":[],"params":[],"returns":null},{"name":"onDrop","docblock":null,"modifiers":[],"params":[{"name":"files","type":null}],"returns":null},{"name":"onOpenClick","docblock":null,"modifiers":[],"params":[],"returns":null},{"name":"deleteFile","docblock":null,"modifiers":[],"params":[{"name":"index","type":null}],"returns":null}],"props":{"children":{"type":{"name":"element"},"required":false,"description":"","defaultValue":{"value":"<div>Drop Here</div>","computed":false}}}},"Frecl/Components/DropZone/FileItem.js":{"description":"","methods":[],"props":{"file":{"type":{"name":"instanceOf","value":"File"},"required":false,"description":"The file to display"},"deleteFile":{"type":{"name":"custom","raw":"PropTypes.function"},"required":false,"description":"Function to fire when the delete button is clicked"},"index":{"type":{"name":"union","value":[{"name":"string"},{"name":"number"}]},"required":false,"description":"Index of the file to delete"}}},"Frecl/Components/FontIcons/FontIcons.jsx":{"description":"","methods":[],"props":{"name":{"type":{"name":"string"},"required":true,"description":""}}},"Frecl/Components/Form/ErrorWrapper.jsx":{"description":"","methods":[]},"Frecl/Components/Form/Fieldset.jsx":{"description":"","methods":[]},"Frecl/Components/Form/Form.jsx":{"description":"Displays a form component, inserts all user input into redux state and ensures that all inputs are validated\nbefore allowing the user to submit the form.","methods":[{"name":"handleSubmit","docblock":null,"modifiers":[],"params":[{"name":"e","type":null}],"returns":null}],"props":{"name":{"type":{"name":"string"},"required":true,"description":"Used to namespace all child input components in the Redux store"},"className":{"type":{"name":"string"},"required":false,"description":""},"onSubmit":{"type":{"name":"func"},"required":false,"description":"Called once Form has ensured that all child Input components are valid"},"encType":{"type":{"name":"string"},"required":false,"description":"Accepts different mime types and ensures the user specified onSubmit is called with data in the correct format\ncurrently supports: application/json and multipart/form-data","defaultValue":{"value":"'application/json'","computed":false}},"mapOutputs":{"type":{"name":"instanceOf","value":"Map"},"required":false,"description":""}}},"Frecl/Components/Form/InputGroup.jsx":{"description":"Internal method to make creation of input boxes with appended or prepended segments easier","methods":[],"props":{"append":{"type":{"name":"node"},"required":false,"description":""},"prepend":{"type":{"name":"node"},"required":false,"description":""},"children":{"type":{"name":"element"},"required":false,"description":""}}},"Frecl/Components/Form/InputWrapper.jsx":{"description":"","methods":[],"props":{"name":{"type":{"name":"string"},"required":true,"description":""},"label":{"type":{"name":"union","value":[{"name":"element"},{"name":"string"}]},"required":false,"description":""},"labelPostfix":{"type":{"name":"union","value":[{"name":"element"},{"name":"string"}]},"required":false,"description":""},"className":{"type":{"name":"string"},"required":false,"description":""},"children":{"type":{"name":"node"},"required":false,"description":""}}},"Frecl/Components/FormGenerator/FormGenerator.jsx":{"description":"Retrieves a form schema from the server then generates a form. InputMapper can be used with the component to create\nmore customized layouts, built on FrECL forms and accepts the same arguments as FormSubmit","methods":[{"name":"getUsedFields","docblock":null,"modifiers":[],"params":[{"name":"children","type":null}],"returns":null},{"name":"getUnusedFields","docblock":null,"modifiers":[],"params":[{"name":"children","type":null},{"name":"properties","type":null}],"returns":null},{"name":"handleSubmit","docblock":null,"modifiers":[],"params":[{"name":"e","type":null},{"name":"formData","type":null}],"returns":null}],"props":{"apiType":{"type":{"name":"string"},"required":true,"description":"The Swagger key used to retrieve the form schema. You do not need to include the basename or the origin"},"className":{"type":{"name":"string"},"required":false,"description":""},"stateName":{"type":{"name":"string"},"required":false,"description":"FSA type to execute post and edit actions on"},"onSubmitSuccess":{"type":{"name":"func"},"required":false,"description":"Executed on successfully adding the the form data to both server and application state"},"onSubmitError":{"type":{"name":"func"},"required":false,"description":"Executed on a failed attempt to adding the the form data to server and application state"},"mapInputs":{"type":{"name":"instanceOf","value":"Map"},"required":false,"description":"A map that accepts to properties rename and transform. Rename is a string that replaces the key of the data\ntransform is a function that returns transformed data"},"editId":{"type":{"name":"number"},"required":false,"description":"Id of the data inside apiType you wish to edit"},"editArgs":{"type":{"name":"instanceOf","value":"Map"},"required":false,"description":"Arguments to merge into the form as default values"}}},"Frecl/Components/FormGenerator/InputMapper.jsx":{"description":"Allows the user to create a custom layout for the FormGenerator. Must have a FormGenerator component as a parent\nNote: this is used internally to generate a form as well.","methods":[{"name":"mapInput","docblock":null,"modifiers":[],"params":[{"name":"inputAttributes","type":null}],"returns":null}],"props":{"name":{"type":{"name":"string"},"required":true,"description":"Matches a key in the Form Schema passed down by the parent FormGenerator.\nIs used to match InputMapper with the correct attributes"},"component":{"type":{"name":"element"},"required":false,"description":"User can pass in a custom component for InputMapper to render instead of the default options"},"children":{"type":{"name":"node"},"required":false,"description":"Passed as children to the chosen component currently only supported by Select and custom components"}}},"Frecl/Components/GeoSuggest/GeoSuggest.jsx":{"description":"","methods":[]},"Frecl/Components/Input/Base.jsx":{"description":"","displayName":"InputBase","methods":[{"name":"handleChange","docblock":null,"modifiers":[],"params":[{"name":"e","type":null}],"returns":null}]},"Frecl/Components/Input/Input.jsx":{"description":"Creates an input component with a label and validation","methods":[],"props":{"name":{"type":{"name":"string"},"required":true,"description":""},"label":{"type":{"name":"string"},"required":false,"description":""},"labelPostfix":{"type":{"name":"any"},"required":false,"description":""},"prepend":{"type":{"name":"any"},"required":false,"description":""},"append":{"type":{"name":"any"},"required":false,"description":""}}},"Frecl/Components/Input/MultiInput.jsx":{"description":"","methods":[],"props":{"defaultValue":{"defaultValue":{"value":"List()","computed":true}}}},"Frecl/Components/ListView/ListView.jsx":{"description":"","methods":[{"name":"closeListItem","docblock":null,"modifiers":[],"params":[{"name":"index","type":null}],"returns":null}],"props":{"id":{"type":{"name":"string"},"required":true,"description":""}}},"Frecl/Components/Modal/Modal.jsx":{"description":"Basic modal component for showing and hiding a modal","methods":[],"props":{"className":{"type":{"name":"string"},"required":false,"description":""},"id":{"type":{"name":"string"},"required":true,"description":"Passed down to toggle view to specify what component to toggle must be unique among modals"},"title":{"type":{"name":"string"},"required":false,"description":"The modals title"},"children":{"type":{"name":"any"},"required":false,"description":"The content of the modal"},"cancel":{"type":{"name":"bool"},"required":false,"description":"Display a cancel button"},"success":{"type":{"name":"element"},"required":false,"description":"Display a select button that is passed in by the user"}}},"Frecl/Components/Number/Number.jsx":{"description":"","methods":[],"props":{"pattern":{"defaultValue":{"value":"'[0-9]'","computed":false}},"type":{"defaultValue":{"value":"'number'","computed":false}}}},"Frecl/Components/Progressmeter/ProgressMeter.jsx":{"description":"","methods":[{"name":"makeGradient","docblock":null,"modifiers":[],"params":[{"name":"percent","type":null},{"name":"extra","type":null}],"returns":null}],"props":{"step":{"type":{"name":"number"},"required":true,"description":"","defaultValue":{"value":"0","computed":false}},"width":{"type":{"name":"string"},"required":false,"description":"","defaultValue":{"value":"'100%'","computed":false}}}},"Frecl/Components/Progressmeter/doc/recipe/entry.js":{"description":"","methods":[]},"Frecl/Components/Radio/Radio.jsx":{"description":"Creates a radio button connected to FrECL forms state management all HTML5 attributes apply","methods":[]},"Frecl/Components/Radio/RadioTab.jsx":{"description":"","methods":[]},"Frecl/Components/Radio/RadioTabs.jsx":{"description":"","methods":[],"props":{"name":{"type":{"name":"string"},"required":true,"description":""}}},"Frecl/Components/Row/Row.jsx":{"description":"A wrapper that injunction with Col components creates a grid layout","methods":[],"props":{"className":{"type":{"name":"string"},"required":false,"description":""},"children":{"type":{"name":"element"},"required":false,"description":"Must be a FrECL Col element"}}},"Frecl/Components/Select/Base.jsx":{"description":"","displayName":"SelectBase","methods":[{"name":"handleChange","docblock":null,"modifiers":[],"params":[{"name":"e","type":null}],"returns":null}]},"Frecl/Components/Select/MultiSelect.jsx":{"description":"","methods":[{"name":"handleChange","docblock":null,"modifiers":[],"params":[{"name":"values","type":null}],"returns":null}],"props":{"options":{"defaultValue":{"value":"List([])","computed":true}}}},"Frecl/Components/Select/Select.jsx":{"description":"","methods":[]},"Frecl/Components/Slider/Slider.jsx":{"description":"","methods":[{"name":"handleChange","docblock":null,"modifiers":[],"params":[{"name":"value","type":null}],"returns":null}]},"Frecl/Components/Spinner/Spinner.jsx":{"description":"","methods":[],"props":{"className":{"type":{"name":"string"},"required":false,"description":"","defaultValue":{"value":"\"loader\"","computed":false}}}},"Frecl/Components/Switch/Base.jsx":{"description":"","displayName":"SwitchBase","methods":[{"name":"getChecked","docblock":null,"modifiers":[],"params":[],"returns":null},{"name":"handleChange","docblock":null,"modifiers":[],"params":[{"name":"e","type":null}],"returns":null}],"props":{"id":{"type":{"name":"string"},"required":true,"description":""}}},"Frecl/Components/Switch/Switch.jsx":{"description":"","methods":[]},"Frecl/Components/TabbedContainer/TabbedContainer.jsx":{"description":"A tabbed container that is integrated with react router\n\n<Route component={TabbedContainer}>\n  <Route path=\"style-guide\" component={StyleGuide}/>\n  <Route path=\"crud-helpers\" component={CrudHelpers}/>\n</Route>\n\n@param path is the name displayed in the container\n@param component is the react component to display when selected","methods":[]},"Frecl/Components/Table/Table.jsx":{"description":"","methods":[]},"Frecl/Components/Table/TableItem.jsx":{"description":"","methods":[]},"Frecl/Components/TextArea/Base.jsx":{"description":"","displayName":"TextareaBase","methods":[{"name":"handleChange","docblock":null,"modifiers":[],"params":[{"name":"e","type":null}],"returns":null}]},"Frecl/Components/TextArea/TextArea.jsx":{"description":"","methods":[]},"Frecl/Components/ToggleView/ToggleView.jsx":{"description":"","methods":[{"name":"getValidElement","docblock":null,"modifiers":[],"params":[{"name":"element","type":null},{"name":"className","type":null}],"returns":null}],"props":{"id":{"type":{"name":"string"},"required":true,"description":""},"component":{"type":{"name":"string"},"required":true,"description":""}}},"Frecl/Components/Validation/DisplayValidation.jsx":{"description":"","methods":[],"props":{"name":{"type":{"name":"string"},"required":true,"description":""},"children":{"type":{"name":"union","value":[{"name":"element"},{"name":"arrayOf","value":{"name":"element"}}]},"required":false,"description":""}}},"Frecl/Components/Validation/Validate.jsx":{"description":"A component to allow validation anywhere inside of a form component for input elements in that same component","methods":[],"props":{"name":{"type":{"name":"string"},"required":true,"description":"The name of the form field to validate"}}},"Frecl/Components/Validation/Validation.jsx":{"description":"","methods":[]},"Frecl/Components/Video/Vimeo.js":{"description":"","methods":[]},"Frecl/Components/Video/YouTube.js":{"description":"","methods":[]},"Frecl/Helpers/validate.js":{"description":"","methods":[]},"Frecl/StyleGuide/crud-helpers.jsx":{"description":"","methods":[]},"Frecl/StyleGuide/style-guide.jsx":{"description":"","methods":[{"name":"handleSubmit","docblock":null,"modifiers":[],"params":[{"name":"e","type":null},{"name":"fields","type":null}],"returns":null},{"name":"lastNameValidation","docblock":null,"modifiers":[],"params":[{"name":"value","type":null}],"returns":null},{"name":"addSuccess","docblock":null,"modifiers":[],"params":[],"returns":null},{"name":"addWarning","docblock":null,"modifiers":[],"params":[],"returns":null},{"name":"addDanger","docblock":null,"modifiers":[],"params":[],"returns":null},{"name":"clearAlerts","docblock":null,"modifiers":[],"params":[],"returns":null},{"name":"toggleModal","docblock":null,"modifiers":[],"params":[],"returns":null},{"name":"clearInputs","docblock":null,"modifiers":[],"params":[],"returns":null}]}}